---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYjdjZERGcFJTbk1IbER0NlRXTkMxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFek1UUXpOek0wV2hjTk1qY3dNVEV5TVRRegpOek0wV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREw4NmJRaEoxRVJYaUNaekpLdUhlZVpjK1NvcXlLY05Db2ZRaHh3b1FCZmEvVEZxUEcKT0tPbHUyOUpwSnRzVmVIRk14WHRXcEFSQ3QyOUlDUjYwYWdxZjQ0M1hiSWx3bTFUdnU5MTYvWWprUnFyeWxiKwpHWlpIanhUYXB4dHA3OEVLbFZ0V2pXQitCVlIrNGxENy9wM2JnY1EyWHVHOTlBN3pWSDZFZmdiQ0JCVU10MXdICjFjMXFrRFV1VHNsaFhWQTkzTzRYUjhpL2NUa09mVmUvWTFuSVhOU0hQeUlWWlg0RmxTbVlqaEhVMktUS29UN2MKK3grU3VqN0thSTdudGZuTGcrc3FqakZrd1dYeklnRS84K2VkTWRyMFpiYVI1L0ZNbGx0R2F6dWJpM3BoSnhpYQpINUh6dXRNTzdwVXBvU3o4N0FpNktxVmYyaktpZmQ4L0I1NzlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDS2V2Z2lxUmRSL0t6UFkyZ2xVTnJqREJTU1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFETHVieFdNaWlIY1pRMVJBUDMvcTZ0UXdTTmY2UXBiNjJqZkpSclVXWlhtR09xUFN3OUtKT25WCmJNSzg4MTZwdkxSdFNDa3VsSnZqRXF1c0o0ZWJ4OHdSMUJ3cXo2VmcrLzZUdGJXTXVMLzF0WHIwV0RGVHRiWTYKdmoxVlpTWU02RlVSakJta29IVzJQMHFDZzA3RVM2Um1tL1MvVXI1dEo4TWRET1VZR3F0RVk4QmYzNTZJdkplcQphWVU5YzNFUHZjVWJKU2pEamYyWHZ0S3pjVzJIT3EzenNWQk1VRVN0dmFMbXZEQjdiVlMvd28zNlZscmhMWE9LCjhDaEJ4Y2o1bzkwNEVqbmJ4M25xMUpCZ25wV20wQVArV3o4bEhpWFJhS2xrM1FlODBsMXB1OHQ4VEtoY0xNbHQKRi9EcVNCbjdaRlRlak13TDk3OEJFMFJZWVZiVEhNUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeS9PbTBJU2RSRVY0Z21jeVNyaDNubVhQa3FLc2luRFFxSDBJY2NLRUFYMnYweGFqCnhqaWpwYnR2U2FTYmJGWGh4VE1WN1ZxUUVRcmR2U0FrZXRHb0tuK09OMTJ5SmNKdFU3N3ZkZXYySTVFYXE4cFcKL2htV1I0OFUycWNiYWUvQkNwVmJWbzFnZmdWVWZ1SlErLzZkMjRIRU5sN2h2ZlFPODFSK2hINEd3Z1FWRExkYwpCOVhOYXBBMUxrN0pZVjFRUGR6dUYwZkl2M0U1RG4xWHYyTlp5RnpVaHo4aUZXVitCWlVwbUk0UjFOaWt5cUUrCjNQc2Zrcm8reW1pTzU3WDV5NFByS280eFpNRmw4eUlCUC9Qbm5USGE5R1cya2VmeFRKWmJSbXM3bTR0NllTY1kKbWgrUjg3clREdTZWS2FFcy9Pd0l1aXFsWDlveW9uM2ZQd2VlL1FJREFRQUJBb0lCQVFDV2xrZFQ3S2JGMHRtQQp4enRkNmtmLy8wSTlEYm1CMm54bCt6T3g4eUpPaTRPM3d4NlhiQmlBZFIxZGJabUlhdnp4QXFBdENWSVlFMExYCnNwVGN6bEp4Vm84bUdCdENRQVZDOFZhVFplN3VJZVJrZFZpMzh5Si9vWWlQVFJVenFkK0p0ZStqdjIxQWZ5VDkKTHBNSEROOTNSS0FnV1B3cXFib2tOZjNZUzhrbmxGTU0wRlN3L21mM3k4QnRpb3ZRbDlQRzdPemQrbUZCbFJUKwozN0ZWbUNXMUFTK0R6TmJXWktPZVovTDVMTXJ1amZ3cXRRU1V1RVFtYkE4NmVuNFMyVXI5ZUJUUVVKcTFiNnVRCkdUV0VDOERabG9jalBZV2t3VUVhaVJZV2VVY3Z6WktmcTI0N0MvNlUyanZzb0Jqc1k1bzRrM3V6R3p0V0d1RXgKMTduRUN6d3RBb0dCQVB1VUx5ZGdUTXZIdHU0WTUyaDBCRTRHaW9YVDh3RTJsbk1qblpaZUQ1ZENMNDlTZWF0bgpKb21GSGliTFpUelZmcWxDMU11YVppR1RGVW8xN1o5WGRuOTJKQmdickhkV1pYTXZLU25sOWNvZm5HaXJicU8vCnFFT0RRemdtWldSV0pqWUFidk1YUVc4cFVmUjZrUFdTNGcwdktHVWtJcXYxT2hFYWdjSUtJcFh2QW9HQkFNK0oKTTBVZDJ4UFZrSWNERDl0UGdqMlRpL2Z6enhsUWovUFArL3FZVUV4ZHdNVlhVNldHeEJnK2NUZEVKMXI4c05wMAp4ZTVOT2lxUkxGVzBaaWJtWFRZS1RBcTdtamlIa25qR0tIL3M1REZIeGNRQXJ2TUdMNHN3SExDV3gvWFAvYkdMCmprNEltVWI2YSttaktidE82NmYxUTZ3RUZBNHJVRDVVSU0rUFRhWFRBb0dCQUx2QmtSdVRERjE5bExISDFsU24KV1ZzZUdKM2VXOXJJOGFuR3ArTEVHbUNwM2JMYU84SEhQd1NkVzY1YVdCajV3UWp6dnJxaFpaMmpGdDJHdCt3VwpxM0pmS25ydmxGeVFGekRLdnE3dFYrM2NmNi9DV2RWTndYZDViRjVva1gwN3FsTGRLZkMwcDNvZDNYTlhVZjVrCis5NFpGczI5RlQ4K3luSmZWUDRLOEZyekFvR0JBTEVNMVVaenNBQjl3NnpLdWU1WktEMHI4TTc1bW9aNEtqYlEKQ3FIQTYxQWE4MmZubGg2eWwvd3UyUnRTODFnMkZ4Sm5hS3hpQ2V0aXFqWDdqdUpFeU9SZmFId0hqQXdKN0xWSQpLQ2pxaWNwWTlxaStCSUtqbGsvaUhiZXhDcW4wWlBQZ29PaUZnVzRDR2FuYVhySERKRnZIYTVJR2NLMmQyZmt5CmdFTlNkK1d0QW9HQkFQcUt3RFBpWHRJSDdwajFtSTJmZVdQaTFnLzhueUZwQVozbGxWdzMwUncrTjNzeTVvdDAKQk9MTFdzZVZvQjN3bndyQVVzTWdaTGVHMW1kT0ZrenFQRjk4MDEwT25wNlRMOCtTUCs3K1BrR2xGdTFJM0xhaApGaVBKNHdLZVU1aVRwQkRseE0wRk1RZlJBYXhjV0hLS2hvRENUR0RYQzNRUkhhOFRlRFhKemhZcwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYjdjZERGcFJTbk1IbER0NlRXTkMxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFek1UUXpOek0wV2hjTk1qY3dNVEV5TVRRegpOek0wV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREw4NmJRaEoxRVJYaUNaekpLdUhlZVpjK1NvcXlLY05Db2ZRaHh3b1FCZmEvVEZxUEcKT0tPbHUyOUpwSnRzVmVIRk14WHRXcEFSQ3QyOUlDUjYwYWdxZjQ0M1hiSWx3bTFUdnU5MTYvWWprUnFyeWxiKwpHWlpIanhUYXB4dHA3OEVLbFZ0V2pXQitCVlIrNGxENy9wM2JnY1EyWHVHOTlBN3pWSDZFZmdiQ0JCVU10MXdICjFjMXFrRFV1VHNsaFhWQTkzTzRYUjhpL2NUa09mVmUvWTFuSVhOU0hQeUlWWlg0RmxTbVlqaEhVMktUS29UN2MKK3grU3VqN0thSTdudGZuTGcrc3FqakZrd1dYeklnRS84K2VkTWRyMFpiYVI1L0ZNbGx0R2F6dWJpM3BoSnhpYQpINUh6dXRNTzdwVXBvU3o4N0FpNktxVmYyaktpZmQ4L0I1NzlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDS2V2Z2lxUmRSL0t6UFkyZ2xVTnJqREJTU1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFETHVieFdNaWlIY1pRMVJBUDMvcTZ0UXdTTmY2UXBiNjJqZkpSclVXWlhtR09xUFN3OUtKT25WCmJNSzg4MTZwdkxSdFNDa3VsSnZqRXF1c0o0ZWJ4OHdSMUJ3cXo2VmcrLzZUdGJXTXVMLzF0WHIwV0RGVHRiWTYKdmoxVlpTWU02RlVSakJta29IVzJQMHFDZzA3RVM2Um1tL1MvVXI1dEo4TWRET1VZR3F0RVk4QmYzNTZJdkplcQphWVU5YzNFUHZjVWJKU2pEamYyWHZ0S3pjVzJIT3EzenNWQk1VRVN0dmFMbXZEQjdiVlMvd28zNlZscmhMWE9LCjhDaEJ4Y2o1bzkwNEVqbmJ4M25xMUpCZ25wV20wQVArV3o4bEhpWFJhS2xrM1FlODBsMXB1OHQ4VEtoY0xNbHQKRi9EcVNCbjdaRlRlak13TDk3OEJFMFJZWVZiVEhNUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVHBjWWhMNlQyQi9BL010RWh3T0I4REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFek1UUXpOek0wV2hjTk1qY3dNVEV5TVRRegpOek0wV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEdmFKY1NDb0wwTVA1VWI0MDN5U054a3Q0MEt0U24KVXgrazJ3L0c3bmpvTFQ0Y0ZRYmNOMW1Ic29zS2dkL3NnZElORThiYWsxaVRRWkFJQ3ZMS2pmc3BsVG9CNURIVwpRN3JQelBkRTJjQmdQMXlFNzVCbzBOWmhxZXFkNFR3dEtzcnpFU1pCdWpUYjhOWCtKWHpVbDFXaDlxMFpybWNVCm4zR2lyV3RZT0hzOTZCejN4elQ2RGtpZjNRcTZ1ZmM3T1V3OXF6eUhvbzM1L1R6SURFRTZKTEFzMWZIYklnMUQKRWNXeVc4K3dwWG5lK2RJTUZaWDZIRFRrYTdoak5UbTNFTlI5ckx2cW45dFlRQ3FwRStBRFpKUml5Q3pqV2NXdgprSDNkZHdSUjcycWIrZmx6SnNXc1RKYlV4NjJaY0h3Z3RrSVB6UHpjM1ZpTVMwT3k5elZwSmo1M0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBaW5yNElxa1hVZnlzejJOb0pWRGE0dwp3VWtrTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFaQ3NDU1pxV0Q2Z2svV1Y1ZUFOdmgybWlWUjZIVWVnSFk1UXoxUldsZDVmTWtXb3IKVXczOURQZi90WVVXUlZKeUpPZVcwSktVL3laYzNMemFnTGxFM0VWOUtkKzhuU3ZjZjVUa1pQR2tLNitvYXNNLwplY3M5SlltN2VQVXgwNndPN1VoSHpQOWdub3E3Tk93ak95dHlPaGhYRGZaNmZIZ09lcWF5eW9DV0ZoNVRQODdTCnBrbGM3cFpuNkFLTG5DWHo2bjNCUnZrYTc1bW5odm50NmZHQmJNQUJVMXpJM1c0ejd6ckJabTdIeTVqOVQ5UG0KOWw0ZTFZd0pFcDA4YklRc3pxTTlJYW0wUVlnZE5ETENlSWdXNFpqS0o5VlZRTUNTVjNkeG9ISjU4NHIvK1N0Sgp3Sm1TRHVxODhORXNKOFVPRUZXeWlMQXlIVFViZUVtZ2xObkRmUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNzJpWEVncUM5REQrVkcrTk44a2pjWkxlTkNyVXAxTWZwTnNQeHU1NDZDMCtIQlVHCjNEZFpoN0tMQ29IZjdJSFNEUlBHMnBOWWswR1FDQXJ5eW8zN0taVTZBZVF4MWtPNno4ejNSTm5BWUQ5Y2hPK1EKYU5EV1lhbnFuZUU4TFNySzh4RW1RYm8wMi9EVi9pVjgxSmRWb2ZhdEdhNW5GSjl4b3ExcldEaDdQZWdjOThjMAorZzVJbjkwS3VybjNPemxNUGFzOGg2S04rZjA4eUF4Qk9pU3dMTlh4MnlJTlF4SEZzbHZQc0tWNTN2blNEQldWCitodzA1R3U0WXpVNXR4RFVmYXk3NnAvYldFQXFxUlBnQTJTVVlzZ3M0MW5GcjVCOTNYY0VVZTlxbS9uNWN5YkYKckV5VzFNZXRtWEI4SUxaQ0Q4ejgzTjFZakV0RHN2YzFhU1krZHdJREFRQUJBb0lCQVFDWFE3NHY1L1JWMVo3YwpPcDgvWUJiRTY4YjVyeFl0b3BlYjBjMW1JOGJBNjlVU2FUYXNiVXhrTUtzcE9HWURTUU11d0JBa2luU3NsZ0FyCkZML1N1MksySTFORFhxc2VkaXpTbnU2YzBmaDYxNDNkY0lBTnVlVzZUMkd0MzJIbUorT1RNSUs3aEt0aFRBbnAKU2taVkRFbE96RTBTck43MGFNbWp2MjdUanR4UGY5LzBjTHZsWWN3RXM5R3NFa3ZHbkRPTzhYZG1HMkdyMVRVQgpVQlV2OFVHVzREa3JHelZJNDRYczVoZmR4dnAwdXpHYURkQThJbzVDaFlseU1rZlZwTFkzQUdSVjUrUHYwU3ZLCnFnYzBNL0tSRG5VNkNkRERvSk5QNGJRdWJYR3lwYkQzRzdtTkd0THo2TGRnWkQ2QzhWbXB4WSsvVmk5akNTWC8KVzUyYUkvSUJBb0dCQVBYaWtLVnk0d0tXYU14TWJUd0N2UTQ3TzY4bXVrTmhwMXFuazd2amNHWHUxTURRbHV4bAo3Wi9pRVNSMldyaGcxb2s0dU5aRGFqZjhHL2E5U2I4MWlXVU9PZGNvSElnWGR3SkNJQjU2QWp0YklhaGFRamNoCjVnMWZvcHpwRUJHSVphVkFOSUYzOHNNL1VLVmcyU0crcWRER3h4V2VhVVZFQi9laXorbEhESE9EQW9HQkFQbEIKMGlnZTdIT3lhRHhCWGN1dlZlWG5UUmJ0UVVVQzArWlhDc2ZQdlhyY0VJWUthdUR2K3VmOHV3S2x1V1R1a3FDSQpsWGJaTTA3Nlk5eWEzaEFGYUgvaDJ5NmMyVGxqUnMrWmRwenlxYm1MQWVFU0FDVTRyOVpHZ09SWHBwRjFqOEdmClNEamZqUkRTYk45cEZwR0k3SnlrT3ZhbEYvMlA3UHdWcnRWK3JiTDlBb0dBWlZabEN1c1lpRDU1SG9uNUV4eUYKMGxHelBYS1duYUtubUlNc0xlbUVyMTRKTFJaS3ZVOGM2aUgvc3FsY3BsU3kxb2NjRnFKZUtvaXE5YnY1b3VacgpvOHlESmh1UDlyN0UrNWRKS1laYldSOHI5ZmlOQmEvZzRtNGgxTTF4SStpMUM3QTBjNDk5Njk0eVhKWlhwc0t2CnRpM1dheUNJZmxXVmV3Z003RFd0K2dVQ2dZQnZJK0EzTDRLekcrdktZa01XWFRucDV6YkNjRXZZSDZpb1hrdGEKU05EdUJVNEExb2hOZi9QYW1TQXh6LzlZZCtBOVlHbDBzdWhqNE5YQ09mT21KU014VWwzTzdQVVcxNk50VWJwSAp4UlBVdlp5NjVMSFg1dXpRbUdORWJhakIxeStnWUF0dUFJLy8zalBaY2h3MERGK2tnTDRoMS85WWVtSnJES2dHClhoUEphUUtCZ1FEMUdjYjRxY2FackpnUEFPVEhVeForZzQ3ajc4UmVKZGlVUmgzNVFlYkswb1JNOHR2N2VCWVoKaCs4QU00RjZsbFNwSVpRZE1ZR2JtSnlaRUtZYzhaZU5jZmNFUDhwclNOZjNIR3Q1dVlSUnpwQnUvRC9kUjVOcgpPZGJpdVZ5V1hHM0JZL0RNWlRFSGxDdGg4ZjBXb09CUjFvTlZ4N0toYm1tMjREcUNNL21VSXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYjdjZERGcFJTbk1IbER0NlRXTkMxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFek1UUXpOek0wV2hjTk1qY3dNVEV5TVRRegpOek0wV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREw4NmJRaEoxRVJYaUNaekpLdUhlZVpjK1NvcXlLY05Db2ZRaHh3b1FCZmEvVEZxUEcKT0tPbHUyOUpwSnRzVmVIRk14WHRXcEFSQ3QyOUlDUjYwYWdxZjQ0M1hiSWx3bTFUdnU5MTYvWWprUnFyeWxiKwpHWlpIanhUYXB4dHA3OEVLbFZ0V2pXQitCVlIrNGxENy9wM2JnY1EyWHVHOTlBN3pWSDZFZmdiQ0JCVU10MXdICjFjMXFrRFV1VHNsaFhWQTkzTzRYUjhpL2NUa09mVmUvWTFuSVhOU0hQeUlWWlg0RmxTbVlqaEhVMktUS29UN2MKK3grU3VqN0thSTdudGZuTGcrc3FqakZrd1dYeklnRS84K2VkTWRyMFpiYVI1L0ZNbGx0R2F6dWJpM3BoSnhpYQpINUh6dXRNTzdwVXBvU3o4N0FpNktxVmYyaktpZmQ4L0I1NzlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDS2V2Z2lxUmRSL0t6UFkyZ2xVTnJqREJTU1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFETHVieFdNaWlIY1pRMVJBUDMvcTZ0UXdTTmY2UXBiNjJqZkpSclVXWlhtR09xUFN3OUtKT25WCmJNSzg4MTZwdkxSdFNDa3VsSnZqRXF1c0o0ZWJ4OHdSMUJ3cXo2VmcrLzZUdGJXTXVMLzF0WHIwV0RGVHRiWTYKdmoxVlpTWU02RlVSakJta29IVzJQMHFDZzA3RVM2Um1tL1MvVXI1dEo4TWRET1VZR3F0RVk4QmYzNTZJdkplcQphWVU5YzNFUHZjVWJKU2pEamYyWHZ0S3pjVzJIT3EzenNWQk1VRVN0dmFMbXZEQjdiVlMvd28zNlZscmhMWE9LCjhDaEJ4Y2o1bzkwNEVqbmJ4M25xMUpCZ25wV20wQVArV3o4bEhpWFJhS2xrM1FlODBsMXB1OHQ4VEtoY0xNbHQKRi9EcVNCbjdaRlRlak13TDk3OEJFMFJZWVZiVEhNUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU9lUmsxYXZTa09kbTZOL1ozaEJFWVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFeE16RTBNemN6TkZvWERUSTNNREV4TWpFMApNemN6TkZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUx6ZDdqUytrM0lDcTFLcmVCZFUKK2RlQ2FmRWxZWGV4bHpLUzA1Vko5SWNsbUlUR0YyOWRMbmVXUGdGSWxDVnN1NksrUm91alRUbkN2TUJQUGV1Ugpsb3dZdkI5OTBYdjZBSTlZRDM4UFdlcG5uUUkzVXdtbTZVbG5WQ1lMTXZHVTZPYWtQTDVOTUs4VTVBc0Znb2VSCmEveDEzNEcrOHJlSExzMDJ1ZEZrSngyR1BVSE96cjcvaXJkNlVLdkxXY3h2aGV0Z0tRL005cm00b1FoSUNzcDUKNHBsaG4zY3ZyY01INkpHQVAwdW1aelQwUkswbWpwVEd2ZzN0amtIYVlTblI2NVU0RjNoemU4dEpqb3dZZXNEQgpoc3RmYTRtaTFWeWc1ZC9XampYdGRmeXA5cXZ4U1ZtWVVwY3N6a0RWQmZwb0tSRk9ZeDQ1cnZWZTRQTE8rNko1ClcxVUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUNLZXZnaXFSZFIvSwp6UFkyZ2xVTnJqREJTU1F3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVpWM1RvZ0g3Vy9SS1krdG0wVHFsR1lLbGM4dzQKMGFJa3BPVU1VeXlyVnVGK0YvenN2cWMwUzFPWjd1Uk5BaTQxSWxubDBSYjEyYjExbXhZTWlCMFNFSHIvL1lCKwpHSFRtSnIxenNyWGs2K3dBRzAyVEx6UDJXL0J2eTlvSUNqaWhlajI2T2hQR0FrcDRCNkJnRTRpM1AyL0F3MlU4CnFJbGdpVFRGWnpQMEtFZUpZSUtYZkYxSGh5bSt5NkphNWhWTmt5Nk0vaEVXbDFtQ1ZDU2ZnUDhaZi95RkE1ekYKREtJQjlUUUNJcmJlQlI1dERNb1lSNk0xS05hejRDU3pVaDYyNmY2ZmMyRkhEWDlKWXBHVkx0S2M2QlFja2RKSgo5TENXcGUwOFRIY1hUcHBGWU5XalhRRGx1RkhXOWNYVzN5WnJIdXhDaDVDU01OeGdFQ1RjdFdYNVh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBdk4zdU5MNlRjZ0tyVXF0NEYxVDUxNEpwOFNWaGQ3R1hNcExUbFVuMGh5V1loTVlYCmIxMHVkNVkrQVVpVUpXeTdvcjVHaTZOTk9jSzh3RTg5NjVHV2pCaThIMzNSZS9vQWoxZ1BmdzlaNm1lZEFqZFQKQ2FicFNXZFVKZ3N5OFpUbzVxUTh2azB3cnhUa0N3V0NoNUZyL0hYZmdiN3l0NGN1elRhNTBXUW5IWVk5UWM3Twp2ditLdDNwUXE4dFp6RytGNjJBcEQ4ejJ1YmloQ0VnS3lubmltV0dmZHkrdHd3Zm9rWUEvUzZabk5QUkVyU2FPCmxNYStEZTJPUWRwaEtkSHJsVGdYZUhON3kwbU9qQmg2d01HR3kxOXJpYUxWWEtEbDM5YU9OZTExL0tuMnEvRkoKV1poU2x5ek9RTlVGK21ncEVVNWpIam11OVY3ZzhzNzdvbmxiVlFJREFRQUJBb0lCQVFDQVR0bGtkZEFmbFZhawp6QjdDNHhUMDV3Rm9OVGY1SStvUERwYTFoaytjZk5zWDRLZk5IV1hURW51L1RYcHZ6bVhPMHl1RDlBWWo1bnRxCnZxclhYY29FRlUzQXF5NWs1bHY1Qmg5STk3bmpPRTcvVVd5VlV4S0xycW9KU25ScWtQcUVyakVpSzdpV1NULy8KaU5lN2wvemZ2NGgvVWFUOUw5YUl6ZFFCUCtRZTlvZkdzdXM0S2EzRTFDRXB6UXVwUklWWU82Unc3VnlHN0J0WApIMzR1L3JFMUhwdjVXYlg4N1RGTXlHc0c5SktaSHBYb3VsZlFmQjgyYjhGTkZxUmFmaXhJdnVrOWtlcGxEVXdrCjRWMEw4a1VGWU5CYkh6c2FUZndHWTVQSUk1VEN6NjZRRWZNVy9wNTh3Y2p4UjRsZTIyT01ONzk0WlNuWVdaaGcKOUk3VmRWaUZBb0dCQU5YTUU0WWUwU0R4Wm9TZWg0U2lqbzlneXRqd1pnbHRjSHliT28yTWswUElSWnJJY1RrOQo4aTRicnVsOXc2ZXJ0ZFp6VlRKeHRYZ0hDVlNBZVllQ2Q2WGpRQklmUW9CSGpyY256c2VyRnBxUHBnR1VIT3dGCkNObTM5UUpYOWtySS9DSFh0UnJpVzE0eHhMTU5DakJQblVtVDVIRXBKcHQva3dHWnpMSjg5djBIQW9HQkFPSW0KQ21QeXpwcWlDRDF0Y1BqVCthTkkvVHRPRXhwcnl3TklXTUM1anIwYnFiTVIwN1JoTUFiZFBHUjV4ZzhmRW5Ncwp0bVZUZ3AyMjU5eHJUekNlaGdxUjhPejQyaGRWSEtnTzNZb3ZMQkIzRFZLaldzTnZxQkNMNkZHVkpFaFZnNmQyCjJWbzErcWdCNHcwT3JoeEhWVXJSa1JlQ09UOXdETHpvbytYS0M2bkRBb0dCQU03cEhKUVd5d3A0MW1EUEZCU1gKUmlVWTVmZ2lZSDRMUG13NXh1Y3EvM01BSmV6d3hETkQ4bGdSVHF5R25JNXZMaUtIcUJLVDNhNTJFTitKSHhTNApmWmM4WWN1b0dUSVJEdHZQV040QWhIVzlSRW9PMEJiVG9JY2s4NmY2L1UvUFI4UnhBTU11QW9NYzQyTHQ0Y2h6CnBLT0t6L0Y4Zy9MRityMzMzUlY0djRpTkFvR0JBT0lCMG5DQXdDbVp0Vkp1aFhDbnA5eWZuVFFmbXNmVTRsYXQKZnNWY3JHSWh1ejdTbWhpeTZDUjBCVjhFdEFONHNoK1lsOUE3M1ZWdzdkZERCeWszeEEzY1BFTVhrQjJ4V2FvNgo4UHlnbUJEOGFid2t0UmlNQmhKRFFESUlNdkozUTlPZzJ5ZGt1dFFjenFURi93c1QzeEdlenJvSDB0NnJSSSttCmorV2VQbm14QW9HQkFOV3F3cWRlbEJ5NDlrTmFoSjhMVVZTNWQyUm1DMS9ON3gzN3MrUFEwNlV3R2lEazAxS1AKUHdzR0tGbzkxMERrMmJZVFBFd01CanUxQjJlWVJaOURWM2cyMmdodEVjc2pBM0RHU1pMaUc2WEdiRmNUMi91NQpCTFRXblFTTmlQYXNBcXNHb204STRUUDJ4cGtFZWRhaUk5bUQrM0hWdW80ajJ4ZUl2Q0VvRnUvRAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: cilium
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  routing-mode: "native"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "true"
  ipv4-native-routing-cidr: 10.244.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-routes: "true"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: cilium
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.cilium.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: cilium
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: cilium
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: cilium
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "f1b3c4f64d4c26a54cadfbe8b6ef0a60f337c479d070a7a7fdbc98e888f97024"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: cilium
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "f1b3c4f64d4c26a54cadfbe8b6ef0a60f337c479d070a7a7fdbc98e888f97024"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.5@sha256:303f9076bdc73b3fc32aaedee64a14f6f44c8bb08ee9e3956d443021103ebe7a"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.5@sha256:dbef89f924a927043d02b40c18e417c1ea0e8f58b44523b80fef7e3652db24d4"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: cilium
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
